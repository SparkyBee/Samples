#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18444
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Intranet.Models
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="micdb_14")]
	public partial class dbGCompDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertLicense(License instance);
    partial void UpdateLicense(License instance);
    partial void DeleteLicense(License instance);
    partial void InsertLicenseAttachment(LicenseAttachment instance);
    partial void UpdateLicenseAttachment(LicenseAttachment instance);
    partial void DeleteLicenseAttachment(LicenseAttachment instance);
    partial void InsertCountry(Country instance);
    partial void UpdateCountry(Country instance);
    partial void DeleteCountry(Country instance);
    partial void InsertMarinerAttachment(MarinerAttachment instance);
    partial void UpdateMarinerAttachment(MarinerAttachment instance);
    partial void DeleteMarinerAttachment(MarinerAttachment instance);
    partial void InsertMariner(Mariner instance);
    partial void UpdateMariner(Mariner instance);
    partial void DeleteMariner(Mariner instance);
    partial void InsertActivity(Activity instance);
    partial void UpdateActivity(Activity instance);
    partial void DeleteActivity(Activity instance);
    partial void InsertMarinerLicense(MarinerLicense instance);
    partial void UpdateMarinerLicense(MarinerLicense instance);
    partial void DeleteMarinerLicense(MarinerLicense instance);
    partial void InsertEmployer(Employer instance);
    partial void UpdateEmployer(Employer instance);
    partial void DeleteEmployer(Employer instance);
    #endregion
		
		public dbGCompDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["scfConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public dbGCompDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public dbGCompDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public dbGCompDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public dbGCompDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<License> Licenses
		{
			get
			{
				return this.GetTable<License>();
			}
		}
		
		public System.Data.Linq.Table<LicenseAttachment> LicenseAttachments
		{
			get
			{
				return this.GetTable<LicenseAttachment>();
			}
		}
		
		public System.Data.Linq.Table<Country> Countries
		{
			get
			{
				return this.GetTable<Country>();
			}
		}
		
		public System.Data.Linq.Table<MarinerAttachment> MarinerAttachments
		{
			get
			{
				return this.GetTable<MarinerAttachment>();
			}
		}
		
		public System.Data.Linq.Table<Mariner> Mariners
		{
			get
			{
				return this.GetTable<Mariner>();
			}
		}
		
		public System.Data.Linq.Table<vw_LicensebyCountry> vw_LicensebyCountries
		{
			get
			{
				return this.GetTable<vw_LicensebyCountry>();
			}
		}
		
		public System.Data.Linq.Table<Activity> Activities
		{
			get
			{
				return this.GetTable<Activity>();
			}
		}
		
		public System.Data.Linq.Table<MarinerLicense> MarinerLicenses
		{
			get
			{
				return this.GetTable<MarinerLicense>();
			}
		}
		
		public System.Data.Linq.Table<Employer> Employers
		{
			get
			{
				return this.GetTable<Employer>();
			}
		}
		
		public System.Data.Linq.Table<vw_Employer> vw_Employers
		{
			get
			{
				return this.GetTable<vw_Employer>();
			}
		}
		
		public System.Data.Linq.Table<vw_Employer_Rig> vw_Employer_Rigs
		{
			get
			{
				return this.GetTable<vw_Employer_Rig>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.License")]
	public partial class License : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.Nullable<int> _CountryID;
		
		private string _Title;
		
		private System.Nullable<int> _SortOrder;
		
		private string _Notes;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnCountryIDChanging(System.Nullable<int> value);
    partial void OnCountryIDChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnSortOrderChanging(System.Nullable<int> value);
    partial void OnSortOrderChanged();
    partial void OnNotesChanging(string value);
    partial void OnNotesChanged();
    #endregion
		
		public License()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CountryID", DbType="Int")]
		public System.Nullable<int> CountryID
		{
			get
			{
				return this._CountryID;
			}
			set
			{
				if ((this._CountryID != value))
				{
					this.OnCountryIDChanging(value);
					this.SendPropertyChanging();
					this._CountryID = value;
					this.SendPropertyChanged("CountryID");
					this.OnCountryIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="VarChar(150)")]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SortOrder", DbType="Int")]
		public System.Nullable<int> SortOrder
		{
			get
			{
				return this._SortOrder;
			}
			set
			{
				if ((this._SortOrder != value))
				{
					this.OnSortOrderChanging(value);
					this.SendPropertyChanging();
					this._SortOrder = value;
					this.SendPropertyChanged("SortOrder");
					this.OnSortOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notes", DbType="VarChar(1000)")]
		public string Notes
		{
			get
			{
				return this._Notes;
			}
			set
			{
				if ((this._Notes != value))
				{
					this.OnNotesChanging(value);
					this.SendPropertyChanging();
					this._Notes = value;
					this.SendPropertyChanged("Notes");
					this.OnNotesChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LicenseAttachment")]
	public partial class LicenseAttachment : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private int _MarinerID;
		
		private int _MarinerLicenseID;
		
		private string _FileName;
		
		private string _Location;
		
		private string _Notes;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnMarinerIDChanging(int value);
    partial void OnMarinerIDChanged();
    partial void OnMarinerLicenseIDChanging(int value);
    partial void OnMarinerLicenseIDChanged();
    partial void OnFileNameChanging(string value);
    partial void OnFileNameChanged();
    partial void OnLocationChanging(string value);
    partial void OnLocationChanged();
    partial void OnNotesChanging(string value);
    partial void OnNotesChanged();
    #endregion
		
		public LicenseAttachment()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MarinerID", DbType="Int NOT NULL")]
		public int MarinerID
		{
			get
			{
				return this._MarinerID;
			}
			set
			{
				if ((this._MarinerID != value))
				{
					this.OnMarinerIDChanging(value);
					this.SendPropertyChanging();
					this._MarinerID = value;
					this.SendPropertyChanged("MarinerID");
					this.OnMarinerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MarinerLicenseID", DbType="Int NOT NULL")]
		public int MarinerLicenseID
		{
			get
			{
				return this._MarinerLicenseID;
			}
			set
			{
				if ((this._MarinerLicenseID != value))
				{
					this.OnMarinerLicenseIDChanging(value);
					this.SendPropertyChanging();
					this._MarinerLicenseID = value;
					this.SendPropertyChanged("MarinerLicenseID");
					this.OnMarinerLicenseIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileName", DbType="VarChar(250)")]
		public string FileName
		{
			get
			{
				return this._FileName;
			}
			set
			{
				if ((this._FileName != value))
				{
					this.OnFileNameChanging(value);
					this.SendPropertyChanging();
					this._FileName = value;
					this.SendPropertyChanged("FileName");
					this.OnFileNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Location", DbType="VarChar(500)")]
		public string Location
		{
			get
			{
				return this._Location;
			}
			set
			{
				if ((this._Location != value))
				{
					this.OnLocationChanging(value);
					this.SendPropertyChanging();
					this._Location = value;
					this.SendPropertyChanged("Location");
					this.OnLocationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notes", DbType="VarChar(150)")]
		public string Notes
		{
			get
			{
				return this._Notes;
			}
			set
			{
				if ((this._Notes != value))
				{
					this.OnNotesChanging(value);
					this.SendPropertyChanging();
					this._Notes = value;
					this.SendPropertyChanged("Notes");
					this.OnNotesChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Country")]
	public partial class Country : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _Country1;
		
		private string _Image;
		
		private System.Nullable<int> _SortOrder;
		
		private string _Notes;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnCountry1Changing(string value);
    partial void OnCountry1Changed();
    partial void OnImageChanging(string value);
    partial void OnImageChanged();
    partial void OnSortOrderChanging(System.Nullable<int> value);
    partial void OnSortOrderChanged();
    partial void OnNotesChanging(string value);
    partial void OnNotesChanged();
    #endregion
		
		public Country()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Country", Storage="_Country1", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Country1
		{
			get
			{
				return this._Country1;
			}
			set
			{
				if ((this._Country1 != value))
				{
					this.OnCountry1Changing(value);
					this.SendPropertyChanging();
					this._Country1 = value;
					this.SendPropertyChanged("Country1");
					this.OnCountry1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Image", DbType="VarChar(150)")]
		public string Image
		{
			get
			{
				return this._Image;
			}
			set
			{
				if ((this._Image != value))
				{
					this.OnImageChanging(value);
					this.SendPropertyChanging();
					this._Image = value;
					this.SendPropertyChanged("Image");
					this.OnImageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SortOrder", DbType="Int")]
		public System.Nullable<int> SortOrder
		{
			get
			{
				return this._SortOrder;
			}
			set
			{
				if ((this._SortOrder != value))
				{
					this.OnSortOrderChanging(value);
					this.SendPropertyChanging();
					this._SortOrder = value;
					this.SendPropertyChanged("SortOrder");
					this.OnSortOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notes", DbType="VarChar(1000)")]
		public string Notes
		{
			get
			{
				return this._Notes;
			}
			set
			{
				if ((this._Notes != value))
				{
					this.OnNotesChanging(value);
					this.SendPropertyChanging();
					this._Notes = value;
					this.SendPropertyChanged("Notes");
					this.OnNotesChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MarinerAttachment")]
	public partial class MarinerAttachment : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private int _MarinerID;
		
		private string _Filename;
		
		private string _Location;
		
		private string _Notes;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnMarinerIDChanging(int value);
    partial void OnMarinerIDChanged();
    partial void OnFilenameChanging(string value);
    partial void OnFilenameChanged();
    partial void OnLocationChanging(string value);
    partial void OnLocationChanged();
    partial void OnNotesChanging(string value);
    partial void OnNotesChanged();
    #endregion
		
		public MarinerAttachment()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MarinerID", DbType="Int NOT NULL")]
		public int MarinerID
		{
			get
			{
				return this._MarinerID;
			}
			set
			{
				if ((this._MarinerID != value))
				{
					this.OnMarinerIDChanging(value);
					this.SendPropertyChanging();
					this._MarinerID = value;
					this.SendPropertyChanged("MarinerID");
					this.OnMarinerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Filename", DbType="VarChar(250)")]
		public string Filename
		{
			get
			{
				return this._Filename;
			}
			set
			{
				if ((this._Filename != value))
				{
					this.OnFilenameChanging(value);
					this.SendPropertyChanging();
					this._Filename = value;
					this.SendPropertyChanged("Filename");
					this.OnFilenameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Location", DbType="VarChar(500)")]
		public string Location
		{
			get
			{
				return this._Location;
			}
			set
			{
				if ((this._Location != value))
				{
					this.OnLocationChanging(value);
					this.SendPropertyChanging();
					this._Location = value;
					this.SendPropertyChanged("Location");
					this.OnLocationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notes", DbType="VarChar(150)")]
		public string Notes
		{
			get
			{
				return this._Notes;
			}
			set
			{
				if ((this._Notes != value))
				{
					this.OnNotesChanging(value);
					this.SendPropertyChanging();
					this._Notes = value;
					this.SendPropertyChanged("Notes");
					this.OnNotesChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Mariner")]
	public partial class Mariner : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _LastName;
		
		private string _FirstName;
		
		private string _MiddleName;
		
		private string _Address;
		
		private string _Address2;
		
		private string _City;
		
		private string _State;
		
		private string _ZipCode;
		
		private string _Country;
		
		private string _HomePhone;
		
		private string _CellPhone;
		
		private string _Email;
		
		private string _Employer;
		
		private string _SSN;
		
		private string _Passport;
		
		private string _BirthCert;
		
		private string _Citizenship;
		
		private string _RigName;
		
		private System.Nullable<System.DateTime> _DateOfBirth;
		
		private string _CityOfBirth;
		
		private string _StateOfBirth;
		
		private string _CountryOfBirth;
		
		private string _HairColor;
		
		private string _EyeColor;
		
		private string _Height;
		
		private string _Weight;
		
		private string _Notes;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnLastNameChanging(string value);
    partial void OnLastNameChanged();
    partial void OnFirstNameChanging(string value);
    partial void OnFirstNameChanged();
    partial void OnMiddleNameChanging(string value);
    partial void OnMiddleNameChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnAddress2Changing(string value);
    partial void OnAddress2Changed();
    partial void OnCityChanging(string value);
    partial void OnCityChanged();
    partial void OnStateChanging(string value);
    partial void OnStateChanged();
    partial void OnZipCodeChanging(string value);
    partial void OnZipCodeChanged();
    partial void OnCountryChanging(string value);
    partial void OnCountryChanged();
    partial void OnHomePhoneChanging(string value);
    partial void OnHomePhoneChanged();
    partial void OnCellPhoneChanging(string value);
    partial void OnCellPhoneChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnEmployerChanging(string value);
    partial void OnEmployerChanged();
    partial void OnSSNChanging(string value);
    partial void OnSSNChanged();
    partial void OnPassportChanging(string value);
    partial void OnPassportChanged();
    partial void OnBirthCertChanging(string value);
    partial void OnBirthCertChanged();
    partial void OnCitizenshipChanging(string value);
    partial void OnCitizenshipChanged();
    partial void OnRigNameChanging(string value);
    partial void OnRigNameChanged();
    partial void OnDateOfBirthChanging(System.Nullable<System.DateTime> value);
    partial void OnDateOfBirthChanged();
    partial void OnCityOfBirthChanging(string value);
    partial void OnCityOfBirthChanged();
    partial void OnStateOfBirthChanging(string value);
    partial void OnStateOfBirthChanged();
    partial void OnCountryOfBirthChanging(string value);
    partial void OnCountryOfBirthChanged();
    partial void OnHairColorChanging(string value);
    partial void OnHairColorChanged();
    partial void OnEyeColorChanging(string value);
    partial void OnEyeColorChanged();
    partial void OnHeightChanging(string value);
    partial void OnHeightChanged();
    partial void OnWeightChanging(string value);
    partial void OnWeightChanged();
    partial void OnNotesChanging(string value);
    partial void OnNotesChanged();
    #endregion
		
		public Mariner()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="VarChar(100)")]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this.OnLastNameChanging(value);
					this.SendPropertyChanging();
					this._LastName = value;
					this.SendPropertyChanged("LastName");
					this.OnLastNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="VarChar(100)")]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this.OnFirstNameChanging(value);
					this.SendPropertyChanging();
					this._FirstName = value;
					this.SendPropertyChanged("FirstName");
					this.OnFirstNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MiddleName", DbType="VarChar(100)")]
		public string MiddleName
		{
			get
			{
				return this._MiddleName;
			}
			set
			{
				if ((this._MiddleName != value))
				{
					this.OnMiddleNameChanging(value);
					this.SendPropertyChanging();
					this._MiddleName = value;
					this.SendPropertyChanged("MiddleName");
					this.OnMiddleNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="VarChar(200)")]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address2", DbType="VarChar(200)")]
		public string Address2
		{
			get
			{
				return this._Address2;
			}
			set
			{
				if ((this._Address2 != value))
				{
					this.OnAddress2Changing(value);
					this.SendPropertyChanging();
					this._Address2 = value;
					this.SendPropertyChanged("Address2");
					this.OnAddress2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_City", DbType="VarChar(100)")]
		public string City
		{
			get
			{
				return this._City;
			}
			set
			{
				if ((this._City != value))
				{
					this.OnCityChanging(value);
					this.SendPropertyChanging();
					this._City = value;
					this.SendPropertyChanged("City");
					this.OnCityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_State", DbType="VarChar(50)")]
		public string State
		{
			get
			{
				return this._State;
			}
			set
			{
				if ((this._State != value))
				{
					this.OnStateChanging(value);
					this.SendPropertyChanging();
					this._State = value;
					this.SendPropertyChanged("State");
					this.OnStateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ZipCode", DbType="VarChar(20)")]
		public string ZipCode
		{
			get
			{
				return this._ZipCode;
			}
			set
			{
				if ((this._ZipCode != value))
				{
					this.OnZipCodeChanging(value);
					this.SendPropertyChanging();
					this._ZipCode = value;
					this.SendPropertyChanged("ZipCode");
					this.OnZipCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Country", DbType="VarChar(50)")]
		public string Country
		{
			get
			{
				return this._Country;
			}
			set
			{
				if ((this._Country != value))
				{
					this.OnCountryChanging(value);
					this.SendPropertyChanging();
					this._Country = value;
					this.SendPropertyChanged("Country");
					this.OnCountryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HomePhone", DbType="VarChar(50)")]
		public string HomePhone
		{
			get
			{
				return this._HomePhone;
			}
			set
			{
				if ((this._HomePhone != value))
				{
					this.OnHomePhoneChanging(value);
					this.SendPropertyChanging();
					this._HomePhone = value;
					this.SendPropertyChanged("HomePhone");
					this.OnHomePhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CellPhone", DbType="VarChar(50)")]
		public string CellPhone
		{
			get
			{
				return this._CellPhone;
			}
			set
			{
				if ((this._CellPhone != value))
				{
					this.OnCellPhoneChanging(value);
					this.SendPropertyChanging();
					this._CellPhone = value;
					this.SendPropertyChanged("CellPhone");
					this.OnCellPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(150)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Employer", DbType="VarChar(250)")]
		public string Employer
		{
			get
			{
				return this._Employer;
			}
			set
			{
				if ((this._Employer != value))
				{
					this.OnEmployerChanging(value);
					this.SendPropertyChanging();
					this._Employer = value;
					this.SendPropertyChanged("Employer");
					this.OnEmployerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SSN", DbType="VarChar(50)")]
		public string SSN
		{
			get
			{
				return this._SSN;
			}
			set
			{
				if ((this._SSN != value))
				{
					this.OnSSNChanging(value);
					this.SendPropertyChanging();
					this._SSN = value;
					this.SendPropertyChanged("SSN");
					this.OnSSNChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Passport", DbType="VarChar(50)")]
		public string Passport
		{
			get
			{
				return this._Passport;
			}
			set
			{
				if ((this._Passport != value))
				{
					this.OnPassportChanging(value);
					this.SendPropertyChanging();
					this._Passport = value;
					this.SendPropertyChanged("Passport");
					this.OnPassportChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BirthCert", DbType="VarChar(50)")]
		public string BirthCert
		{
			get
			{
				return this._BirthCert;
			}
			set
			{
				if ((this._BirthCert != value))
				{
					this.OnBirthCertChanging(value);
					this.SendPropertyChanging();
					this._BirthCert = value;
					this.SendPropertyChanged("BirthCert");
					this.OnBirthCertChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Citizenship", DbType="VarChar(50)")]
		public string Citizenship
		{
			get
			{
				return this._Citizenship;
			}
			set
			{
				if ((this._Citizenship != value))
				{
					this.OnCitizenshipChanging(value);
					this.SendPropertyChanging();
					this._Citizenship = value;
					this.SendPropertyChanged("Citizenship");
					this.OnCitizenshipChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RigName", DbType="VarChar(150)")]
		public string RigName
		{
			get
			{
				return this._RigName;
			}
			set
			{
				if ((this._RigName != value))
				{
					this.OnRigNameChanging(value);
					this.SendPropertyChanging();
					this._RigName = value;
					this.SendPropertyChanged("RigName");
					this.OnRigNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateOfBirth", DbType="Date")]
		public System.Nullable<System.DateTime> DateOfBirth
		{
			get
			{
				return this._DateOfBirth;
			}
			set
			{
				if ((this._DateOfBirth != value))
				{
					this.OnDateOfBirthChanging(value);
					this.SendPropertyChanging();
					this._DateOfBirth = value;
					this.SendPropertyChanged("DateOfBirth");
					this.OnDateOfBirthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CityOfBirth", DbType="VarChar(150)")]
		public string CityOfBirth
		{
			get
			{
				return this._CityOfBirth;
			}
			set
			{
				if ((this._CityOfBirth != value))
				{
					this.OnCityOfBirthChanging(value);
					this.SendPropertyChanging();
					this._CityOfBirth = value;
					this.SendPropertyChanged("CityOfBirth");
					this.OnCityOfBirthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StateOfBirth", DbType="VarChar(150)")]
		public string StateOfBirth
		{
			get
			{
				return this._StateOfBirth;
			}
			set
			{
				if ((this._StateOfBirth != value))
				{
					this.OnStateOfBirthChanging(value);
					this.SendPropertyChanging();
					this._StateOfBirth = value;
					this.SendPropertyChanged("StateOfBirth");
					this.OnStateOfBirthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CountryOfBirth", DbType="VarChar(50)")]
		public string CountryOfBirth
		{
			get
			{
				return this._CountryOfBirth;
			}
			set
			{
				if ((this._CountryOfBirth != value))
				{
					this.OnCountryOfBirthChanging(value);
					this.SendPropertyChanging();
					this._CountryOfBirth = value;
					this.SendPropertyChanged("CountryOfBirth");
					this.OnCountryOfBirthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HairColor", DbType="VarChar(50)")]
		public string HairColor
		{
			get
			{
				return this._HairColor;
			}
			set
			{
				if ((this._HairColor != value))
				{
					this.OnHairColorChanging(value);
					this.SendPropertyChanging();
					this._HairColor = value;
					this.SendPropertyChanged("HairColor");
					this.OnHairColorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EyeColor", DbType="VarChar(50)")]
		public string EyeColor
		{
			get
			{
				return this._EyeColor;
			}
			set
			{
				if ((this._EyeColor != value))
				{
					this.OnEyeColorChanging(value);
					this.SendPropertyChanging();
					this._EyeColor = value;
					this.SendPropertyChanged("EyeColor");
					this.OnEyeColorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Height", DbType="VarChar(50)")]
		public string Height
		{
			get
			{
				return this._Height;
			}
			set
			{
				if ((this._Height != value))
				{
					this.OnHeightChanging(value);
					this.SendPropertyChanging();
					this._Height = value;
					this.SendPropertyChanged("Height");
					this.OnHeightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Weight", DbType="VarChar(50)")]
		public string Weight
		{
			get
			{
				return this._Weight;
			}
			set
			{
				if ((this._Weight != value))
				{
					this.OnWeightChanging(value);
					this.SendPropertyChanging();
					this._Weight = value;
					this.SendPropertyChanged("Weight");
					this.OnWeightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notes", DbType="VarChar(3000)")]
		public string Notes
		{
			get
			{
				return this._Notes;
			}
			set
			{
				if ((this._Notes != value))
				{
					this.OnNotesChanging(value);
					this.SendPropertyChanging();
					this._Notes = value;
					this.SendPropertyChanged("Notes");
					this.OnNotesChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.vw_LicensebyCountry")]
	public partial class vw_LicensebyCountry
	{
		
		private string _Title;
		
		private System.Nullable<int> _CountryID;
		
		private System.Nullable<int> _Id;
		
		private string _Country;
		
		private string _Image;
		
		public vw_LicensebyCountry()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="VarChar(150)")]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this._Title = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CountryID", DbType="Int")]
		public System.Nullable<int> CountryID
		{
			get
			{
				return this._CountryID;
			}
			set
			{
				if ((this._CountryID != value))
				{
					this._CountryID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int")]
		public System.Nullable<int> Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this._Id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Country", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Country
		{
			get
			{
				return this._Country;
			}
			set
			{
				if ((this._Country != value))
				{
					this._Country = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Image", DbType="VarChar(150)")]
		public string Image
		{
			get
			{
				return this._Image;
			}
			set
			{
				if ((this._Image != value))
				{
					this._Image = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Activity")]
	public partial class Activity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private System.Nullable<int> _MarinerLicenseID;
		
		private System.Nullable<System.DateTime> _ActDate;
		
		private string _ActNotes;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnMarinerLicenseIDChanging(System.Nullable<int> value);
    partial void OnMarinerLicenseIDChanged();
    partial void OnActDateChanging(System.Nullable<System.DateTime> value);
    partial void OnActDateChanged();
    partial void OnActNotesChanging(string value);
    partial void OnActNotesChanged();
    #endregion
		
		public Activity()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MarinerLicenseID", DbType="Int")]
		public System.Nullable<int> MarinerLicenseID
		{
			get
			{
				return this._MarinerLicenseID;
			}
			set
			{
				if ((this._MarinerLicenseID != value))
				{
					this.OnMarinerLicenseIDChanging(value);
					this.SendPropertyChanging();
					this._MarinerLicenseID = value;
					this.SendPropertyChanged("MarinerLicenseID");
					this.OnMarinerLicenseIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ActDate
		{
			get
			{
				return this._ActDate;
			}
			set
			{
				if ((this._ActDate != value))
				{
					this.OnActDateChanging(value);
					this.SendPropertyChanging();
					this._ActDate = value;
					this.SendPropertyChanged("ActDate");
					this.OnActDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActNotes", DbType="VarChar(1500)")]
		public string ActNotes
		{
			get
			{
				return this._ActNotes;
			}
			set
			{
				if ((this._ActNotes != value))
				{
					this.OnActNotesChanging(value);
					this.SendPropertyChanging();
					this._ActNotes = value;
					this.SendPropertyChanged("ActNotes");
					this.OnActNotesChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MarinerLicense")]
	public partial class MarinerLicense : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private int _MarinerID;
		
		private System.Nullable<int> _LicenseID;
		
		private string _EndorsementInfo;
		
		private System.Nullable<System.DateTime> _IssueDate;
		
		private System.Nullable<System.DateTime> _ExpirationDate;
		
		private string _NotesPendingGovt;
		
		private string _NotesGlobal;
		
		private bool _PendingGovt;
		
		private bool _PendingGlobal;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnMarinerIDChanging(int value);
    partial void OnMarinerIDChanged();
    partial void OnLicenseIDChanging(System.Nullable<int> value);
    partial void OnLicenseIDChanged();
    partial void OnEndorsementInfoChanging(string value);
    partial void OnEndorsementInfoChanged();
    partial void OnIssueDateChanging(System.Nullable<System.DateTime> value);
    partial void OnIssueDateChanged();
    partial void OnExpirationDateChanging(System.Nullable<System.DateTime> value);
    partial void OnExpirationDateChanged();
    partial void OnNotesPendingGovtChanging(string value);
    partial void OnNotesPendingGovtChanged();
    partial void OnNotesGlobalChanging(string value);
    partial void OnNotesGlobalChanged();
    partial void OnPendingGovtChanging(bool value);
    partial void OnPendingGovtChanged();
    partial void OnPendingGlobalChanging(bool value);
    partial void OnPendingGlobalChanged();
    #endregion
		
		public MarinerLicense()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MarinerID", DbType="Int NOT NULL")]
		public int MarinerID
		{
			get
			{
				return this._MarinerID;
			}
			set
			{
				if ((this._MarinerID != value))
				{
					this.OnMarinerIDChanging(value);
					this.SendPropertyChanging();
					this._MarinerID = value;
					this.SendPropertyChanged("MarinerID");
					this.OnMarinerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LicenseID", DbType="Int")]
		public System.Nullable<int> LicenseID
		{
			get
			{
				return this._LicenseID;
			}
			set
			{
				if ((this._LicenseID != value))
				{
					this.OnLicenseIDChanging(value);
					this.SendPropertyChanging();
					this._LicenseID = value;
					this.SendPropertyChanged("LicenseID");
					this.OnLicenseIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndorsementInfo", DbType="VarChar(150)")]
		public string EndorsementInfo
		{
			get
			{
				return this._EndorsementInfo;
			}
			set
			{
				if ((this._EndorsementInfo != value))
				{
					this.OnEndorsementInfoChanging(value);
					this.SendPropertyChanging();
					this._EndorsementInfo = value;
					this.SendPropertyChanged("EndorsementInfo");
					this.OnEndorsementInfoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IssueDate", DbType="Date")]
		public System.Nullable<System.DateTime> IssueDate
		{
			get
			{
				return this._IssueDate;
			}
			set
			{
				if ((this._IssueDate != value))
				{
					this.OnIssueDateChanging(value);
					this.SendPropertyChanging();
					this._IssueDate = value;
					this.SendPropertyChanged("IssueDate");
					this.OnIssueDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExpirationDate", DbType="Date")]
		public System.Nullable<System.DateTime> ExpirationDate
		{
			get
			{
				return this._ExpirationDate;
			}
			set
			{
				if ((this._ExpirationDate != value))
				{
					this.OnExpirationDateChanging(value);
					this.SendPropertyChanging();
					this._ExpirationDate = value;
					this.SendPropertyChanged("ExpirationDate");
					this.OnExpirationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NotesPendingGovt", DbType="VarChar(4000)")]
		public string NotesPendingGovt
		{
			get
			{
				return this._NotesPendingGovt;
			}
			set
			{
				if ((this._NotesPendingGovt != value))
				{
					this.OnNotesPendingGovtChanging(value);
					this.SendPropertyChanging();
					this._NotesPendingGovt = value;
					this.SendPropertyChanged("NotesPendingGovt");
					this.OnNotesPendingGovtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NotesGlobal", DbType="VarChar(4000)")]
		public string NotesGlobal
		{
			get
			{
				return this._NotesGlobal;
			}
			set
			{
				if ((this._NotesGlobal != value))
				{
					this.OnNotesGlobalChanging(value);
					this.SendPropertyChanging();
					this._NotesGlobal = value;
					this.SendPropertyChanged("NotesGlobal");
					this.OnNotesGlobalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PendingGovt", DbType="Bit NOT NULL")]
		public bool PendingGovt
		{
			get
			{
				return this._PendingGovt;
			}
			set
			{
				if ((this._PendingGovt != value))
				{
					this.OnPendingGovtChanging(value);
					this.SendPropertyChanging();
					this._PendingGovt = value;
					this.SendPropertyChanged("PendingGovt");
					this.OnPendingGovtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PendingGlobal", DbType="Bit NOT NULL")]
		public bool PendingGlobal
		{
			get
			{
				return this._PendingGlobal;
			}
			set
			{
				if ((this._PendingGlobal != value))
				{
					this.OnPendingGlobalChanging(value);
					this.SendPropertyChanging();
					this._PendingGlobal = value;
					this.SendPropertyChanged("PendingGlobal");
					this.OnPendingGlobalChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Employer")]
	public partial class Employer : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _Employer1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnEmployer1Changing(string value);
    partial void OnEmployer1Changed();
    #endregion
		
		public Employer()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Employer", Storage="_Employer1", DbType="VarChar(250) NOT NULL", CanBeNull=false)]
		public string Employer1
		{
			get
			{
				return this._Employer1;
			}
			set
			{
				if ((this._Employer1 != value))
				{
					this.OnEmployer1Changing(value);
					this.SendPropertyChanging();
					this._Employer1 = value;
					this.SendPropertyChanged("Employer1");
					this.OnEmployer1Changed();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.vw_Employer")]
	public partial class vw_Employer
	{
		
		private string _Employer;
		
		public vw_Employer()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Employer", DbType="VarChar(250)")]
		public string Employer
		{
			get
			{
				return this._Employer;
			}
			set
			{
				if ((this._Employer != value))
				{
					this._Employer = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.vw_Employer_Rig")]
	public partial class vw_Employer_Rig
	{
		
		private string _Employer;
		
		private string _RigName;
		
		private string _EmpRig;
		
		public vw_Employer_Rig()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Employer", DbType="VarChar(250)")]
		public string Employer
		{
			get
			{
				return this._Employer;
			}
			set
			{
				if ((this._Employer != value))
				{
					this._Employer = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RigName", DbType="VarChar(150)")]
		public string RigName
		{
			get
			{
				return this._RigName;
			}
			set
			{
				if ((this._RigName != value))
				{
					this._RigName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmpRig", DbType="VarChar(402)")]
		public string EmpRig
		{
			get
			{
				return this._EmpRig;
			}
			set
			{
				if ((this._EmpRig != value))
				{
					this._EmpRig = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
